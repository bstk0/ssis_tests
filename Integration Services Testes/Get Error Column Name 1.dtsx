<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/24/2016 6:43:23 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="Test"
  DTS:CreatorName="test"
  DTS:DTSID="{4C183886-E398-4FD5-97B9-D109DB4B48C1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="1033"
  DTS:ObjectName="Get Error Column Name"
  DTS:PackageType="5"
  DTS:VersionBuild="101"
  DTS:VersionGUID="{FC24E672-C0A6-46AF-8081-13C404FA7091}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TestDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BEBB7779-2CFE-4490-B2A6-78027084895B}"
      DTS:ObjectName="TestDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=TestDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4826FBB3-B0BD-40AC-AB58-D954262EAC46}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorComment">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{399EC989-C6D4-4552-B2FD-B31E91D087F2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DFT - Move emp data (original)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{1207F900-0812-4D81-82F3-59E7618530DD}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - Move emp data (original)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - Move emp data (original)\DC - Add audit details"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DC - Add audit details"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data (original)\DC - Add audit details.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\DC - Add audit details.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="512"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]"
                      name="packageName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,512,1252)"SSIS Demo"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,512,1252)"SSIS Demo"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="512"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]"
                      name="taskName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,512,1252)"DFT - Move emp data"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,512,1252)"DFT - Move emp data"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]"
                      name="errorLogDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]"
                      name="packageExecutionDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[System::StartTime]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[System::StartTime]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\DC - Add audit details.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="DCV - Convert DOB to date"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Inputs[Data Conversion Input].Columns[DOB]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DOB"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[DOB]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[DOB]"
                      name="DOB"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data (original)\ODD - Load emp data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ODD - Load emp data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tbl_DestinationEmpTable]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[EmpName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EmpName"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[EmpName]"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[DOB]"
                      cachedDataType="date"
                      cachedName="DOB"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[DOB]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EmpName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                      dataType="dbDate"
                      name="DOB" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data (original)\ODD - Log invalid records"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ODD - Log invalid records"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[package_InvalidRecords]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorCode]"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumn]"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[packageName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="packageName"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageName]"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[taskName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="taskName"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[taskName]"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorLogDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="errorLogDate"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorLogDate]"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[packageExecutionDate]"
                      cachedDataType="date"
                      cachedName="packageExecutionDate"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageExecutionDate]"
                      lineageId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorDescription]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4000"
                      cachedName="errorDescription"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorDescription]"
                      lineageId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorDescription]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorColumnName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="errorColumnName"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumnName]"
                      lineageId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowID]"
                      dataType="i4"
                      name="rowID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="packageName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[taskName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="taskName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorCode]"
                      dataType="i4"
                      name="errorCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorDescription]"
                      codePage="1252"
                      dataType="str"
                      length="4000"
                      name="errorDescription" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="errorColumnName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorLogDate]"
                      dataType="dbTimeStamp"
                      name="errorLogDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageExecutionDate]"
                      dataType="dbTimeStamp"
                      name="packageExecutionDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumn]"
                      dataType="i4"
                      name="errorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data (original)\ODS - Read emp source table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="ODS - Read emp source table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tbl_SourceEmpTable]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT ID, EmpName, DOB FROM tbl_SourceEmpTable</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[EmpName]"
                      length="100"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]"
                      name="EmpName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[DOB]"
                      length="50"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]"
                      name="DOB"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EmpName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[DOB]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DOB" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[EmpName]"
                      name="EmpName" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[DOB]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[DOB]"
                      name="DOB" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data (original)\SC - Get error details"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SC - Get error details"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a676710decc048d283117434eb8bd6ab")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a676710decc048d283117434eb8bd6ab")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.errorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);

        try
        {
            var componentMetaData130 = this.ComponentMetaData as IDTSComponentMetaData130;
            if (componentMetaData130 != null)
            {
                Row.errorColumnName = componentMetaData130.GetIdentificationStringByID(Row.ErrorColumn);
            }
        }
        catch(Exception ex)
        {
            Row.errorColumnName = "Unable to fetch column name";
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String errorColumnName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool errorColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String errorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool errorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a676710decc048d283117434eb8bd6ab.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e7b51de1-25ff-4340-98e0-31d06dc8a0cb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a676710decc048d283117434eb8bd6ab</RootNamespace>
    <AssemblyName>SC_a676710decc048d283117434eb8bd6ab</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_a676710decc048d283117434eb8bd6ab" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a676710decc048d283117434eb8bd6ab</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a676710decc048d283117434eb8bd6ab</msb:DisplayName>
    <msb:ProjectId>{19DD1D55-3783-49A9-8437-1463449E5CB1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a676710decc048d283117434eb8bd6ab.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Settings.get_Default():SC_a676710decc048d283117434eb8bd6ab.Properties.Sett" +
    "ings")]

namespace SC_a676710decc048d283117434eb8bd6ab.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a676710decc048d283117434eb8bd6ab.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a676710decc048d283117434eb8bd6ab.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a676710decc048d283117434eb8bd6ab.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABarp1wAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAWjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
NAAAAAAAAEgAAAACAAUAQCIAABARAAABAAAAAAAAAFAzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAMASQAAAAEAABEDAigSAAAK
A28GAAAGbxMAAApvDAAABgIoEgAACnUOAAABCgYsEgMGA28IAAAGbxQAAApvCgAABt4OJgNyAQAA
cG8KAAAG3gAqAAAAARAAAAAAFwAjOgAODwAAAR4CKBAAAAYqKgIDBAUoFQAACipSAnsWAAAKAnsX
AAAKFpRvGAAACioiAhYoGQAACipSAnsWAAAKAnsXAAAKF5RvGAAACioiAhcoGQAACiomAhgDKBoA
AAoqWgMsCAIYKBsAAAoqcjkAAHBzHAAACnomAhkDKBoAAAoqWgMsCAIZKBsAAAoqcjkAAHBzHAAA
CnoeAigdAAAKKh4CKB4AAAoqfgIoHwAACgICcxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHLWAABw
Gm8gAAAKLBUCBQIDKCEAAAoOBHMFAAAGbxIAAAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoIgAA
CgIDfQMAAAQqOgIoIgAACgIDfQQAAAQqHgIoIgAACiqufgUAAAQtHnLmAABw0AcAAAIoIwAACm8k
AAAKcyUAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigmAAAKKi5zGwAABoAH
AAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAYBgAAI34AAIQGAABsBwAA
I1N0cmluZ3MAAAAA8A0AAFgBAAAjVVMASA8AABAAAAAjR1VJRAAAAFgPAAC4AQAAI0Jsb2IAAAAA
AAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIgAAAAgAAAAHAAAAHAAAABEAAAAmAAAAEAAAAAEA
AAADAAAACwAAAAwAAAABAAAABQAAAAEAAAAAAHkDAQAAAAAABgBzAqEFBgAHA6EFBgC/AY4FDwAV
BgAABgDsAW0EBgBWAm0EBgA3Am0EBgDuAm0EBgCTAm0EBgCsAm0EBgADAm0EBgAeAkIDCgDHAgwB
DgAaAFgFBgCPBBUECgA3BQwBEgAoBQwBCgDfBAwBCgDbBgwBBgCeBhUEBgCiAY4FBgBIBcEFBgDT
BFgEFgByAWMDFgDTAWMDFgBaAUMEBgCHAaEFDgABAFgFBgB/BBUEBgBcAxUEBgDCBBUEBgAtARUE
BgDKABUEBgBgB20EAAAAADwAAAAAAAEAAQABABAAKAQAABAAAQABAAEAEAAbBQAAQQABAAUAAQAQ
AL0GAABNAAEAEAABABAAkgYAAFEAAwAUAAEAEABTBgAAUQAEABUAAAAQAMgFJAZRAAUAFgAAARAA
ggYkBmkABwAaAAYAkgaGAAYAUwaKAAEAywaOAAEAywaOABEAHASSABEASgGWABEArACaAFAgAAAA
AMYAJQMGAAEAWCAAAAAAxgAwAwYAAQBgIAAAAADGAD0HngABAMggAAAAAIYYgQUGAAIA0CAAAAAA
hhiBBSoAAgDbIAAAAACGCLwApAAFAPAgAAAAAIYIoQNMAAUA+SAAAAAAhggzBKQABQAOIQAAAACG
CNEDTAAFABchAAAAAIYI7gAQAAUAISEAAAAAhgi2A6gABgA4IQAAAACGCK0EEAAHAEIhAAAAAIYI
6AOoAAgAWSEAAAAAhgBUB0wACQBhIQAAAACGAKUGTAAJAGkhAAAAAIYYgQUGAAkAiSEAAAAAxgAw
B60ACQCuIQAAAADGASkHngANAMEhAAAAAMYBPQeeAA4AwyEAAAAAhhiBBbcADwDSIQAAAACGGIEF
twAQAOEhAAAAAIMYgQUGABEA6SEAAAAAkwhEBb0AEQAVIgAAAACTCDIBwgARABwiAAAAAJMIPgHH
ABEAJCIAAAAAlgixBs0AEgArIgAAAACGGIEFBgASADMiAAAAAJEYhwXSABIAAAABAFgHAAABAD0F
AAACAF0GAAADAO0EAAABADwDAAABADwDAAABADwDAAABADwDAAABAEUAAAACAAIBAAADAD0FAAAE
AO0EAAABAD0FAAABAFgHAAABAOEGAAABAOEGAAABADwDCQCBBQEAEQCBBQYAGQCBBQoAKQCBBRAA
MQCBBRAAOQCBBRAAQQCBBRAASQCBBRAAUQCBBRAAWQCBBRAAYQCBBRAAaQCBBQYAqQCBBQYAyQCB
BRUA2QCBBQYAmQAlAwYAmQAwAwYAmQBpACAA4QCZBCUAcQBNACUAgQCBBSoAgQA9BTQAgQBdBjgA
iQAzADwAgQD9A0EAgQAMBEYAgQAEBAEA6QCBBRAAgQBUB0wAgQClBkwAmQCBBQYA8QCLBlAAmQBx
BlcAoQCBBQYAAQHcAF0AAQFcB2YAsQCBBWwA0QCBBQYALgALAPEALgATAPoALgAbABkBLgAjACIB
LgArAEsBLgAzAEsBLgA7AEsBLgBDACIBLgBLAFEBLgBTAEsBLgBbAGgBQwBjALIB4QB7ALIB4wBr
ALIBKQFzABkBSQFzABkBGwADAAEABwAJAAgACwAAAMAA1gAAAKUD2gAAADcE1gAAANUD2gAAAPIA
3gAAALoD2gAAALEE3gAAAOwD2gAAAEgF4gAAAFIB5wAAALUG7AACAAYAAwACAAcABQACAAgABwAC
AAkACQABAAoACwABAAsADQABAAwADwABAA0AEQACABcAEwACABgAFQABABkAFQACABoAFwAEgAAA
AQAAAAAAAAAAAAAAAAB/AAAABAAAAAAAAAAAAAAAdACjAAAAAAAOAAAAAAAAAAAAAAB9AOsGAAAA
AA4AAAAAAAAAAAAAAH0A9wQAAAAADgAAAAAAAAAAAAAAfQAIBwAAAAAEAAAAAAAAAAAAAAB0ABUE
AAAAAAAAAAABAAAA0gUAAAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNDb21wb25l
bnRNZXRhRGF0YTEzMABHZXRJbnQzMgA8TW9kdWxlPgBJbnB1dElEAEdldElkZW50aWZpY2F0aW9u
U3RyaW5nQnlJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAU0NfYTY3NjcxMGRlY2MwNDhkMjgzMTE3
NDM0ZWI4YmQ2YWIAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNvZGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X2Vycm9yQ29sdW1uTmFtZQBJbnB1dE5h
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0Nf
YTY3NjcxMGRlY2MwNDhkMjgzMTE3NDM0ZWI4YmQ2YWIuZGxsAGdldF9FcnJvckNvZGVfSXNOdWxs
AHNldF9lcnJvckNvbHVtbk5hbWVfSXNOdWxsAGdldF9FcnJvckNvbHVtbl9Jc051bGwAc2V0X2Vy
cm9yRGVzY3JpcHRpb25fSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
R2V0RXJyb3JEZXNjcmlwdGlvbgBzZXRfZXJyb3JEZXNjcmlwdGlvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUGlwZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIA
Z2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFw
cGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2E2NzY3MTBkZWNjMDQ4ZDI4MzExNzQzNGVi
OGJkNmFiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19h
Njc2NzEwZGVjYzA0OGQyODMxMTc0MzRlYjhiZDZhYi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZm
ZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rp
b25zAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Q
cm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAADdVAG4AYQBiAGwAZQAgAHQA
bwAgAGYAZQB0AGMAaAAgAGMAbwBsAHUAbQBuACAAbgBhAG0AZQAAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AYQA2ADcANgA3
ADEAMABkAGUAYwBjADAANAA4AGQAMgA4ADMAMQAxADcANAAzADQAZQBiADgAYgBkADYAYQBiAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAD6TF2cLewWS7mR4cTI6XiX
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhBAcBEjkEIAAScQQgAQ4ICSADARJFHQgSSQMGEkUD
Bh0IBCABCAgEIAECCAUgAgEIHAMgAAIGIAICDhF9BSABHQgICAABEoCBEYCFBSAAEoCJByACAQ4S
gIkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEk0DBhJZAwYSXQMGEiAFIAEBEgwDIAAIBCAB
AQIJIAQBCA4SRRJJBSABARJNBAAAElkEAAASXQUAAQESXQQAABIgAwAAAQMoAAgDKAACAygADgQI
ABJZBAgAEl0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU0NfYTY3NjcxMGRlY2MwNDhkMjgzMTE3NDM0ZWI4YmQ2YWIAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxNgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAMDQA
AAAAAAAAAAAASjQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw0AAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGEANgA3ADYANwAxADAAZABlAGMAYwAwADQAOABkADIAOAAzADEAMQA3ADQAMwA0AGUA
YgA4AGIAZAA2AGEAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYQA2ADcANgA3ADEA
MABkAGUAYwBjADAANAA4AGQAMgA4ADMAMQAxADcANAAzADQAZQBiADgAYgBkADYAYQBiAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBhADYA
NwA2ADcAMQAwAGQAZQBjAGMAMAA0ADgAZAAyADgAMwAxADEANwA0ADMANABlAGIAOABiAGQANgBh
AGIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYQA2ADcA
NgA3ADEAMABkAGUAYwBjADAANAA4AGQAMgA4ADMAMQAxADcANAAzADQAZQBiADgAYgBkADYAYQBi
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABcNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a676710decc048d283117434eb8bd6ab</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">bc2d119428bbaae0793a1a2b60c79557</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">5956a6d059327de1a83445a10a6d686ae41e376b</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">2D</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data (original)\SC - Get error details.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\SC - Get error details.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data (original)\SC - Get error details.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - Move emp data (original)\SC - Get error details.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      lineageId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]"
                      name="errorColumnName" />
                    <outputColumn
                      refId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorDescription]"
                      codePage="1252"
                      dataType="str"
                      length="4000"
                      lineageId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0].Columns[errorDescription]"
                      name="errorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - Move emp data (original).Paths[Data Conversion Error Output]"
              endId="Package\DFT - Move emp data (original)\SC - Get error details.Inputs[Input 0]"
              name="Data Conversion Error Output"
              startId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Error Output]" />
            <path
              refId="Package\DFT - Move emp data (original).Paths[Data Conversion Output]"
              endId="Package\DFT - Move emp data (original)\ODD - Load emp data.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DFT - Move emp data (original).Paths[Derived Column Output]"
              endId="Package\DFT - Move emp data (original)\ODD - Log invalid records.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\DFT - Move emp data (original)\DC - Add audit details.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - Move emp data (original).Paths[OLE DB Source Output]"
              endId="Package\DFT - Move emp data (original)\DCV - Convert DOB to date.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\DFT - Move emp data (original)\ODS - Read emp source table.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\DFT - Move emp data (original).Paths[Output 0]"
              endId="Package\DFT - Move emp data (original)\DC - Add audit details.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\DFT - Move emp data (original)\SC - Get error details.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DFT - Move emp data 1"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BD3E24A8-9987-493B-ACF9-35FB9D88F19F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DFT - Move emp data 1"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DFT - Move emp data 1\DC - Add audit details"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="DC - Add audit details"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\DC - Add audit details.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - Move emp data 1\DC - Add audit details.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="512"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]"
                      name="packageName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,512,1252)"SSIS Demo"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,512,1252)"SSIS Demo"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="512"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]"
                      name="taskName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,512,1252)"DFT - Move emp data"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,512,1252)"DFT - Move emp data"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]"
                      name="errorLogDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]"
                      dataType="date"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]"
                      name="packageExecutionDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[System::StartTime]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[System::StartTime]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[drv_RowNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[drv_RowNumber]"
                      name="drv_RowNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[User::RowCount]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[User::RowCount]</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\DC - Add audit details.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="DCV - Convert DOB to date"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Inputs[Data Conversion Input].Columns[DOB]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DOB"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[cvt_DOB]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[cvt_DOB]"
                      name="cvt_DOB"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - Move emp data 1\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Output].Columns[drv_ErrorComment]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Output].Columns[drv_ErrorComment]"
                      name="drv_ErrorComment"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,255,1252)"Erro de Conversão"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,255,1252)"Erro de Conversão"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DFT - Move emp data 1\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Output].Columns[drv_ErrorComment]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Output].Columns[drv_ErrorComment]"
                      name="drv_ErrorComment"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,255,1252)"Erro no LOAD TABLE"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,255,1252)"Erro no LOAD TABLE"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\ODD - Load emp data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ODD - Load emp data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tbl_DestinationEmpTable]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data 1\ODD - Load emp data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[EmpName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EmpName"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[EmpName]"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].Columns[cvt_DOB]"
                      cachedDataType="date"
                      cachedName="cvt_DOB"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Output].Columns[cvt_DOB]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EmpName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                      dataType="dbDate"
                      name="DOB" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\ODD - Log invalid records"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ODD - Log invalid records"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[package_InvalidRecords]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorCode]"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumn]"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[packageName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="packageName"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageName]"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[taskName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="taskName"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[taskName]"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[taskName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorLogDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="errorLogDate"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorLogDate]"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[errorLogDate]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[packageExecutionDate]"
                      cachedDataType="date"
                      cachedName="packageExecutionDate"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageExecutionDate]"
                      lineageId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output].Columns[packageExecutionDate]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorDescription]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="4000"
                      cachedName="errorDescription"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorDescription]"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorDescription]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorColumnName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="512"
                      cachedName="errorColumnName"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumnName]"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[rowCount]"
                      cachedDataType="i4"
                      cachedName="rowCount"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowNumber]"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[errorComment]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="errorComment"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorComment]"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].Columns[rowContent]"
                      cachedDataType="wstr"
                      cachedLength="2500"
                      cachedName="rowContent"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowContent]"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[rowContent]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowID]"
                      dataType="i4"
                      name="rowID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="packageName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[taskName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="taskName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorCode]"
                      dataType="i4"
                      name="errorCode" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorDescription]"
                      codePage="1252"
                      dataType="str"
                      length="4000"
                      name="errorDescription" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="errorColumnName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorLogDate]"
                      dataType="dbTimeStamp"
                      name="errorLogDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[packageExecutionDate]"
                      dataType="dbTimeStamp"
                      name="packageExecutionDate" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorColumn]"
                      dataType="i4"
                      name="errorColumn" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowNumber]"
                      dataType="i4"
                      name="rowNumber" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[fileName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      name="fileName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[errorComment]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="errorComment" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input].ExternalColumns[rowContent]"
                      dataType="nText"
                      name="rowContent" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODD - Log invalid records.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\ODS - Read emp source table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="ODS - Read emp source table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tbl_SourceEmpTable]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT ID, EmpName, DOB FROM tbl_SourceEmpTable</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[TestDB]"
                  connectionManagerRefId="Package.ConnectionManagers[TestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[EmpName]"
                      length="100"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]"
                      name="EmpName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[DOB]"
                      length="50"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]"
                      name="DOB"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      name="EmpName" />
                    <externalMetadataColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].ExternalColumns[DOB]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DOB" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[EmpName]"
                      name="EmpName" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[DOB]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[DOB]"
                      name="DOB" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\SC - Get error details"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="SC - Get error details"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a676710decc048d283117434eb8bd6ab")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_a676710decc048d283117434eb8bd6ab")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Reflection;  // Added
using System.Xml;         // Added
using System.IO;          // Added
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
	 * either the list contained in the ReadOnlyVariables property or the list contained in
	 * the ReadWriteVariables property of this script component, according to whether or not your
	 * code needs to write into the variable.  To do so, save this script, close this instance of
	 * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
	 * Script Transformation Editor window.
	 * To use a parameter in this script, follow the same steps. Parameters are always read-only.
	 *
	 * Example of reading from a variable or parameter:
	 *  DateTime startTime = Variables.MyStartTime;
	 *
	 * Example of writing to a variable:
	 *  Variables.myStringVariable = "new value";
	 */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
	 * "Working with Connection Managers Programatically" for details.
	 *
	 * To use a connection manager in this script, first ensure that the connection manager has
	 * been added to either the list of connection managers on the Connection Managers page of the
	 * script component editor.  To add the connection manager, save this script, close this instance of
	 * Visual Studio, and add the Connection Manager to the list.
	 *
	 * If the component needs to hold a connection open while processing rows, override the
	 * AcquireConnections and ReleaseConnections methods.
	 * 
	 * Example of using an ADO.Net connection manager to acquire a SqlConnection:
	 *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
	 *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
	 *
	 * Example of using a File connection manager to acquire a file path:
	 *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
	 *  string filePath = (string)rawConnection;
	 *
	 * Example of releasing a connection manager:
	 *  Connections.SalesDB.ReleaseConnection(rawConnection);
	 */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
	 *
	 * Example of firing an error event:
	 *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
	 *
	 * Example of firing an information event:
	 *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
	 *
	 * Example of firing a warning event:
	 *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
	 */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    // Variable that contains the XML document
    StringWriter myStringWriter;
    XmlTextWriter myXmlWriter;



    // additional variables

    Type rowType;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
		 * Add your code here
		 */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
		 * Add your code here
		 */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // reset XML and StringWriter variables prior to use
        myStringWriter = new StringWriter();
        myXmlWriter = new XmlTextWriter(myStringWriter);

        // Row type to get the value of a column
        rowType = Row.GetType();
        String columnValue = "";

        // begin - creating the ROOT of doc
        // Create a new XML document
        // Start writing the XML document:
        myXmlWriter.WriteStartDocument();

        // Create root element <root>
        myXmlWriter.WriteStartElement("ROOT");
        // end - creating the ROOT of doc
        // begin - create body of XML doc
        // Create row element: <row>
        myXmlWriter.WriteStartElement("ROW");

        // Loop through all columns and create a column element: <col1>value</col1><col2>value</col2>
        foreach (IDTSInputColumn100 column in this.ComponentMetaData.InputCollection[0].InputColumnCollection)
        {

            // check if column is to be ignored
            if (

              !(

                (column.Name.Equals("ErrorCode", StringComparison.OrdinalIgnoreCase))

                ||

                (column.Name.Equals("ErrorColumn", StringComparison.OrdinalIgnoreCase))

                )
              )

            {

                //debugFlags += "" + Environment.NewLine + " *ADDING* column >" + column.Name + "<";

                // Use the SSIS column name as element name: <col1>
                myXmlWriter.WriteStartElement(column.Name);



                // Get column value, will fail if null
                try
                {
                    columnValue = rowType.GetProperty(column.Name).GetValue(Row, null).ToString();
                }
                catch
                {
                    // Default value for null values: "null", "" or null
                    columnValue = "null";
                }
                finally
                {

                    myXmlWriter.WriteString(removeForbiddenXmlChars(columnValue));

                }

                // Close column element: </col1>
                myXmlWriter.WriteEndElement();
            }

            //else
            //{
            //debugFlags += "" + Environment.NewLine + " *NOT* adding column >" + column.Name + "<";
            //}
        }

        // Close row element: </row>
        myXmlWriter.WriteEndElement();

        // Output the number of processed rows. 103 = RowsWritten

        this.ComponentMetaData.IncrementPipelinePerfCounter(103, 1);

        // end - create body of XML doc

        // begin - closing XML doc

        // Close root element: </root>
        myXmlWriter.WriteEndElement();

        // Stop writing the XML document
        myXmlWriter.WriteEndDocument();

        // Close document
        myXmlWriter.Close();

        // end - closing XML doc


        Row.rowContent = myStringWriter.ToString();

        //
        Row.errorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);

        try
        {
            var componentMetaData130 = this.ComponentMetaData as IDTSComponentMetaData130;
            if (componentMetaData130 != null)
            {
                Row.errorColumnName = componentMetaData130.GetIdentificationStringByID(Row.ErrorColumn);
            }
        }
        catch (Exception ex)
        {
            Row.errorColumnName = "Unable to fetch column name";
        }
    }

    // Remove forbidden chars that could damage your XML document
    private string removeForbiddenXmlChars(string columnValue)
    {
        return columnValue.Replace("&", "&amp;").Replace("<", "&lt;").Replace(">", "&gt;");
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 ID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool ID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String EmpName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool EmpName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String DOB
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool DOB_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 rowCount
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool rowCount_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String errorComment
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool errorComment_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String errorColumnName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool errorColumnName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String errorDescription
    {
        set
        {
            this[8] = value;
        }
    }
    public bool errorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String rowContent
    {
        set
        {
            this[9] = value;
        }
    }
    public bool rowContent_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 RowCount
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["RowCount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a676710decc048d283117434eb8bd6ab.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E7B51DE1-25FF-4340-98E0-31D06DC8A0CB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a676710decc048d283117434eb8bd6ab</RootNamespace>
    <AssemblyName>SC_a676710decc048d283117434eb8bd6ab</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a676710decc048d283117434eb8bd6ab</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a676710decc048d283117434eb8bd6ab</msb:DisplayName>
    <msb:ProjectId>{C1B5EBEE-7198-49FD-9533-35CED4A330AB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a676710decc048d283117434eb8bd6ab.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:Breakpoint Include="0897240d81a54a4e9d657ecc0bb6bf4e">
      <msb:FileName>main.cs</msb:FileName>
      <msb:LineNumber>151</msb:LineNumber>
      <msb:ColumnNumber>9</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Settings.get_Default():SC_a676710decc048d283117434eb8bd6ab.Properties.Sett" +
    "ings")]

namespace SC_a676710decc048d283117434eb8bd6ab.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a676710decc048d283117434eb8bd6ab.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a676710decc048d283117434eb8bd6ab.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a676710decc048d283117434eb8bd6ab.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a676710decc048d283117434eb8bd6ab.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJkFrVwAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAATj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPw9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
PgAAAAAAAEgAAAACAAUA6CQAAFwYAAABAAAAAAAAAEQ9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAMAvgEAAAEAABECcxIAAAp9
AQAABAICewEAAARzEwAACn0CAAAEAgNvFAAACn0DAAAEcgEAAHAKAnsCAAAEbxUAAAoCewIAAARy
AwAAcG8WAAAKAnsCAAAEcg0AAHBvFgAACgIoFwAACm8YAAAKFowmAAABbxkAAApvGgAACm8bAAAK
CziKAAAAB28cAAAKdBIAAAEMCG8dAAAKchUAAHAbbx4AAAotawhvHQAACnIpAABwG28eAAAKLVgC
ewIAAAQIbx0AAApvFgAACgJ7AwAABAhvHQAACm8fAAAKAxRvIAAACm8hAAAKCt4cJnJBAABwCt4T
AnsCAAAEAgYoBAAABm8iAAAK3AJ7AgAABG8jAAAKB28kAAAKOmv////eEQd1EwAAAQ0JLAYJbyUA
AArcAnsCAAAEbyMAAAoCKBcAAAofZxdvJgAACgJ7AgAABG8jAAAKAnsCAAAEbycAAAoCewIAAARv
KAAACgMCewEAAARvIQAACm8ZAAAGAwIoFwAACgNvBwAABm8pAAAKbxcAAAYCKBcAAAp1FAAAARME
EQQsEwMRBANvCQAABm8qAAAKbxUAAAbeDiYDcksAAHBvFQAABt4AKgAAATQAAAAAwgAg4gAJFQAA
AQIAwgAp6wATAAAAAAIAegCcFgERAAAAAAAAiQEmrwEOFgAAAb4DcoMAAHByhwAAcG8rAAAKcpMA
AHBylwAAcG8rAAAKcqEAAHBypQAAcG8rAAAKKh4CKB0AAAYqKgIDBAUoLAAACipSAnstAAAKAnsu
AAAKFpRvLwAACioiAhYoMAAACipSAnstAAAKAnsuAAAKF5RvLwAACioiAhcoMAAACipSAnstAAAK
AnsuAAAKGJRvLwAACioiAhgoMAAACipSAnstAAAKAnsuAAAKGZRvMQAACioiAhkoMAAACipSAnst
AAAKAnsuAAAKGpRvMQAACioiAhooMAAACipSAnstAAAKAnsuAAAKG5RvLwAACioiAhsoMAAACipS
AnstAAAKAnsuAAAKHJRvMQAACioiAhwoMAAACiomAh0DKDIAAAoqWgMsCAIdKDMAAAoqcq8AAHBz
NAAACnomAh4DKDIAAAoqWgMsCAIeKDMAAAoqcq8AAHBzNAAACnoqAh8JAygyAAAKKl4DLAkCHwko
MwAACipyrwAAcHM0AAAKeh4CKDUAAAoqHgIoNgAACip+Aig3AAAKAgJzIQAABn0EAAAEAgJzIgAA
Bn0FAAAEKpIEckwBAHAabx4AAAosFQIFAgMoOAAACg4EcwYAAAZvHwAABipKKwcCA28gAAAGA28b
AAAGLfEqBio6Aig5AAAKAgN9BgAABCo6Aig5AAAKAgN9BwAABCqWAnsHAAAEbzoAAApyXAEAcG87
AAAKKDwAAApvPQAACqUmAAABKh4CKDkAAAoqrn4IAAAELR5ybgEAcNAHAAACKD4AAApvPwAACnNA
AAAKgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqHgIoQQAACioucykAAAaACgAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAMgIAAAjfgAANAkAAAgLAAAjU3Ry
aW5ncwAAAAA8FAAA4AEAACNVUwAcFgAAEAAAACNHVUlEAAAALBYAADACAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAyAAAACAAAAAoAAAAqAAAAFAAAAEEAAAAQAAAAAQAAAAQA
AAAYAAAAGQAAAAEAAAAHAAAAAQAAAAAAjgQBAAAAAAAGAFsDIggGAO8DIggGAKcCDwgPAJYIAAAG
ANQCCAYGAD4DCAYGAB8DCAYGANYDCAYGAHsDCAYGAJQDCAYGAOsCCAYGAAYDPwQKAK8D2wEGAKQH
BQEOAL0HkwUGAAcCsAUGAOgHHwkSACoAeQcGAHgBsAUSAKcAeQcGAFYJsAUGAFgGsAUKADAH2wEW
ACEH2wEKALUG2wEKAOoJ2wEGAIoCDwgGAEEHQggGAJwG8wUaAFoCeAQaALsCeAQaADQC3gUGAG8C
IggGAMAHBQEOALMHkwUSAAEAeQcSAFoAeQcGAMMAsAUSAIIAeQcSAD0AeQcGAHEEsAUGAIsGsAUG
AKgGCAYGAEgGsAUeAHEAUQceABoAUQdrAJ4KAAAeAI8AUQcGAIQBsAUGAPEKCAYAAAAAyQAAAAAA
AQABAAEAEADDBQAAEAABAAEAAQAQABQHAABdAAQABgABABAAzAkAAGkABAAdAAEAEAAyCQAAVQAG
ACEAAQAQAOAIAABVAAcAIgAAABAASQilCFUACAAkAAABEAAPCaUIgQAKACgAAQCiB+4AAQCxB/IA
AQAEAvYABgAyCfoABgDgCP4AAQDaCQIBAQDaCQIBEQC3BQYBEQAkAgoBEQBaAQ4BUCAAAAAAxgAN
BAYAAQBYIAAAAADGABgEBgABAGAgAAAAAMYAzgoSAQEAYCIAAAAAgQA+CRgBAgCQIgAAAACGGAII
BgADAJgiAAAAAIYYAgiEAAMAoyIAAAAAhghqAR0BBgC4IgAAAACGCNMEbwAGAMEiAAAAAIYIzgUd
AQYA1iIAAAAAhggWBW8ABgDfIgAAAACGCNoAHQEGAPQiAAAAAIYIxQRvAAYA/SIAAAAAhgjFAVUA
BgASIwAAAACGCAMFbwAGABsjAAAAAIYI0gBVAAYAMCMAAAAAhgi2BG8ABgA5IwAAAACGCCIKHQEG
AE4jAAAAAIYIdwVvAAYAVyMAAAAAhgiXCVUABgBsIwAAAACGCEkFbwAGAHUjAAAAAIYIsQEQAAYA
fyMAAAAAhgjoBCEBBwCWIwAAAACGCHYGEAAIAKAjAAAAAIYILQUhAQkAtyMAAAAAhggGChAACgDC
IwAAAACGCGEFIQELANojAAAAAIYA5QpvAAwA4iMAAAAAhgBdCW8ADADqIwAAAACGGAIIBgAMAAok
AAAAAMYAdAomAQwALyQAAAAAxgFtChIBEABCJAAAAADGAc4KEgERAEQkAAAAAIYYAggwARIAUyQA
AAAAhhgCCDABEwBiJAAAAACGCBUKHQEUAIgkAAAAAIMYAggGABQAkCQAAAAAkwg9BzYBFAC8JAAA
AACTCAwCOwEUAMMkAAAAAJMIGAJAARQAyyQAAAAAlghpCUYBFQDSJAAAAACGGAIIBgAVANokAAAA
AJEYCAhLARUAAAABAOkKAAABACQEAAABADYHAAACAOoIAAADAMMGAAABADkEAAABADkEAAABADkE
AAABADkEAAABADkEAAABADkEAAABAOEAAAACANEBAAADADYHAAAEAMMGAAABADYHAAABAOkKAAAB
APAJAAABAPAJAAABADkECQACCAEAEQACCAYAGQACCAoAKQACCBAAMQACCBAAOQACCBAAQQACCBAA
SQACCBAAUQACCBAAWQACCBAAYQACCBAAaQACCAYA2QACCAYA+QACCBUACQECCAYA0QANBAYA0QAY
BAYAcQACCAYAeQACCCcAqQD8AS4AGQG5CQYAGQGFCRAA0QAPATMAIQE0BjkAKQGeBT8AOQEaBkYA
QQH0B0wAiQD6CVEAkQCoAVUASQEYCVkAgQD6CmEAWQEwBGgAqQBlBFUAGQFZBBAAGQF1CQYAiQCB
Cm8AmQBSAgYAIQHLB3MAGQGoCQYAGQFMAgYAIQFiBnkAoQDpAHkASQFSAX4AuQACCIQAuQA2B44A
uQDqCJIAwQDAAJYAuQCEBZsAwQBuBHkAuQCnBaAAuQCLBQEAYQECCBAAuQDlCm8AuQBdCW8A0QAC
CAYA0QD+CKYAqQACCAYA0QDUCKwAaQGeBbIA0QC5CrkAcQGKCr8AgQCWAcYAgQDtCs4A4QACCNQA
AQECCAYALgALAGoBLgATAHMBLgAbAJIBLgAjAJsBLgArAMQBLgAzAMQBLgA7AMQBLgBDAJsBLgBL
AMoBLgBTAMQBLgBbAOEBQwBjACsC4wBrACsCQQF7ACsCyQJzAJIB6QJzAJIBGwADAAEABgAVAAcA
FgAIABgAAABuAU8BAADXBFMBAADSBU8BAAAaBVMBAAACAU8BAADJBFMBAADJAVcBAAAHBVMBAADW
AFcBAAC6BFMBAAAmCk8BAAB7BVMBAACbCVcBAABNBVMBAAC1AVcBAADsBFMBAAB6BlcBAAAxBVMB
AAAKClcBAABlBVMBAAAZCk8BAABBB1sBAAAsAmABAABtCWUBAgAHAAMAAgAIAAUAAgAJAAcAAgAK
AAkAAgALAAsAAgAMAA0AAgANAA8AAgAOABEAAgAPABMAAgAQABUAAgARABcAAgASABkAAgATABsA
AgAUAB0AAQAVAB8AAQAWACEAAQAXACMAAQAYACUAAQAZACcAAQAaACkAAgAjACsAAgAlAC0AAgAm
AC8AAQAnAC8AAgAoADEABIAAAAEAAAAAAAAAAAAAAAAAJQEAAAQAAAAAAAAAAAAAANwASQEAAAAA
DgAAAAAAAAAAAAAA5QAvCgAAAAAEAAAAAAAAAAAAAADcAJMFAAAAAA4AAAAAAAAAAAAAAOUA8AYA
AAAADgAAAAAAAAAAAAAA5QBMCgAAAAAEAAAAAAAAAAAAAADcALAFAAAAAA4AAAAAAAAAAAAAAOUA
zQYAAAAAAAAAAAEAAABTCAAAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJs
ZTEwMABJRFRTSW5wdXRDb2x1bW4xMDAASURUU0lucHV0Q29sdW1uQ29sbGVjdGlvbjEwMABJRFRT
SW5wdXRDb2xsZWN0aW9uMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0lucHV0MTAwAElEVFNFdmFs
dWF0b3JDb250ZXh0MTAwAElEVFNDb21wb25lbnRNZXRhRGF0YTEzMABHZXRJbnQzMgA8TW9kdWxl
PgBnZXRfRE9CAGdldF9JRABJbnB1dElEAEdldElkZW50aWZpY2F0aW9uU3RyaW5nQnlJRABTeXN0
ZW0uSU8AZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFNDX2E2NzY3MTBkZWNjMDQ4ZDI4MzExNzQzNGVi
OGJkNmFiAG1zY29ybGliAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNvZGUASURp
c3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X05hbWUAc2V0
X2Vycm9yQ29sdW1uTmFtZQBnZXRfRW1wTmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAR2V0VHlwZQByb3dUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAY29s
dW1uVmFsdWUAR2V0VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBXcml0ZVN0
cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2E2NzY3MTBk
ZWNjMDQ4ZDI4MzExNzQzNGViOGJkNmFiLmRsbABnZXRfRE9CX0lzTnVsbABnZXRfSURfSXNOdWxs
AGdldF9FcnJvckNvZGVfSXNOdWxsAHNldF9lcnJvckNvbHVtbk5hbWVfSXNOdWxsAGdldF9FbXBO
YW1lX0lzTnVsbABnZXRfRXJyb3JDb2x1bW5fSXNOdWxsAHNldF9lcnJvckRlc2NyaXB0aW9uX0lz
TnVsbABnZXRfZXJyb3JDb21tZW50X0lzTnVsbABzZXRfcm93Q29udGVudF9Jc051bGwAZ2V0X3Jv
d0NvdW50X0lzTnVsbABTZXROdWxsAFN5c3RlbS5YbWwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AZ2V0X0Vycm9yQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9JbnB1dENvbHVt
bkNvbGxlY3Rpb24AZ2V0X0lucHV0Q29sbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24Ac2V0X2Vycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBQcm9wZXJ0eUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVs
aW5lV3JhcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNv
dXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIAbXlTdHJpbmdXcml0ZXIAbXlYbWxX
cml0ZXIAWG1sVGV4dFdyaXRlcgBJbmNyZW1lbnRQaXBlbGluZVBlcmZDb3VudGVyAElFbnVtZXJh
dG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYTY3NjcxMGRlY2Mw
NDhkMjgzMTE3NDM0ZWI4YmQ2YWIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDX2E2NzY3MTBkZWNjMDQ4ZDI4MzExNzQzNGViOGJkNmFiLlByb3BlcnRpZXMA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBFcXVhbHMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAHJlbW92ZUZv
cmJpZGRlblhtbENoYXJzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABXcml0ZUVuZEVs
ZW1lbnQAV3JpdGVTdGFydEVsZW1lbnQAZ2V0X2Vycm9yQ29tbWVudABXcml0ZUVuZERvY3VtZW50
AFdyaXRlU3RhcnREb2N1bWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRD
b21wb25lbnQAZ2V0X0N1cnJlbnQAc2V0X3Jvd0NvbnRlbnQAZ2V0X1Jvd0NvdW50AGdldF9yb3dD
b3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQATW92ZU5leHQAR2V0VmFsdWVXaXRoQ29udGV4
dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBf
UHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AEdldFByb3BlcnR5AAAAAAEACVIA
TwBPAFQAAAdSAE8AVwAAE0UAcgByAG8AcgBDAG8AZABlAAAXRQByAHIAbwByAEMAbwBsAHUAbQBu
AAAJbgB1AGwAbAAAN1UAbgBhAGIAbABlACAAdABvACAAZgBlAHQAYwBoACAAYwBvAGwAdQBtAG4A
IABuAGEAbQBlAAADJgAACyYAYQBtAHAAOwAAAzwAAAkmAGwAdAA7AAADPgAACSYAZwB0ADsAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
EVIAbwB3AEMAbwB1AG4AdAAAcVMAQwBfAGEANgA3ADYANwAxADAAZABlAGMAYwAwADQAOABkADIA
OAAzADEAMQA3ADQAMwA0AGUAYgA4AGIAZAA2AGEAYgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAm9bfCAuWj0GBnGzgE8h/ZgAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQEReQsHBQ4SRRJJEk0SUQYgAQESgIkEIAASQQUgABKAkQUgABKAlQYgARKAnRwFIAASgKEEIAAS
RQMgABwDIAAOByACAg4RgKkGIAESgK0OBiACHBwdHAMgAAIFIAIBCQkEIAEOCAUgAg4ODgkgAwES
YR0IEmUDBhJhAwYdCAQgAQgIBCABAggFIAIBCBwFIAEdCAgFIAASgLUGIAESgLkcBQAAEoC9BiAB
HBKAwQcAARJBEYDFBSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEDBhI5AwYSPQMGEkED
BhIUAwYSGAMGEmkDBhJxAwYSdQMGEiAFIAEBEgwEIAEODgMgAAgEIAEBAgkgBAEIDhJhEmUFIAEB
EmkEAAAScQQAABJ1BQABARJ1BAAAEiADAAABAygACAMoAAIDKAAOBAgAEnEECAASdQQIABIgCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19hNjc2
NzEwZGVjYzA0OGQyODMxMTc0MzRlYjhiZDZhYgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2
AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
Ei5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAACQ+AAAAAAAAAAAAAD4+AAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAwPgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwBhADYANwA2ADcAMQAwAGQAZQBjAGMAMAA0ADgAZAAyADgAMwAxADEANwA0ADMANABlAGIAOABi
AGQANgBhAGIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGEANgA3ADYANwAxADAAZABl
AGMAYwAwADQAOABkADIAOAAzADEAMQA3ADQAMwA0AGUAYgA4AGIAZAA2AGEAYgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYQA2ADcANgA3
ADEAMABkAGUAYwBjADAANAA4AGQAMgA4ADMAMQAxADcANAAzADQAZQBiADgAYgBkADYAYQBiAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGEANgA3ADYANwAx
ADAAZABlAGMAYwAwADQAOABkADIAOAAzADEAMQA3ADQAMwA0AGUAYgA4AGIAZAA2AGEAYgAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAUD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a676710decc048d283117434eb8bd6ab</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::RowCount</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D14.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;151&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">bc2d119428bbaae0793a1a2b60c79557</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">5956a6d059327de1a83445a10a6d686ae41e376b</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">79</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ID]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[EmpName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EmpName"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[EmpName]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[DOB]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DOB"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[DOB]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[rowCount]"
                      cachedDataType="i4"
                      cachedName="rowCount"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]" />
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0].Columns[errorComment]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="errorComment"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="512"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorColumnName]"
                      name="errorColumnName" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorDescription]"
                      codePage="1252"
                      dataType="str"
                      length="4000"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[errorDescription]"
                      name="errorDescription" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[rowContent]"
                      dataType="wstr"
                      length="2500"
                      lineageId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0].Columns[rowContent]"
                      name="rowContent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\Script RowCount"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script RowCount"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 RowCount
    {
        get
        {
            return (Int32)(ParentComponent.ReadWriteVariables["RowCount"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["RowCount"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 
    int zRowCount = 0;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        zRowCount = 0;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        zRowCount++;
        Row.rowCount = zRowCount;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 rowCount
    {
        set
        {
            this[0] = value;
        }
    }
    public bool rowCount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String errorComment
    {
        set
        {
            this[1] = value;
        }
    }
    public bool errorComment_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Settings.get_Default():SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Sett" +
    "ings")]

namespace SC_aa1b631db43b4442b4558f0b8a1235cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_aa1b631db43b4442b4558f0b8a1235cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_aa1b631db43b4442b4558f0b8a1235cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_aa1b631db43b4442b4558f0b8a1235cb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_aa1b631db43b4442b4558f0b8a1235cb</msb:DisplayName>
    <msb:ProjectId>{7B952D3F-A1A9-401E-9C0A-5BB43E074A9B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_aa1b631db43b4442b4558f0b8a1235cb.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_aa1b631db43b4442b4558f0b8a1235cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_aa1b631db43b4442b4558f0b8a1235cb")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_aa1b631db43b4442b4558f0b8a1235cb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b1b59175-b5a9-4e1a-a3c7-6e9a087d19fc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_aa1b631db43b4442b4558f0b8a1235cb</RootNamespace>
    <AssemblyName>SC_aa1b631db43b4442b4558f0b8a1235cb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_aa1b631db43b4442b4558f0b8a1235cb" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_aa1b631db43b4442b4558f0b8a1235cb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABXarFwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAtjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
MwAAAAAAAEgAAAACAAUADCIAAKAQAAABAAAAAAAAAKwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADoCKBAAAAoCFn0BAAAEKh4CKBEAAAoqbgICewEAAAQXWH0B
AAAEAwJ7AQAABG8GAAAGKh4CKAwAAAYqKgIDBAUoEgAACio6AhYDjBoAAAEoEwAACipaAywIAhYo
FAAACipyAQAAcHMVAAAKeiYCFwMoEwAACipaAywIAhcoFAAACipyAQAAcHMVAAAKeh4CKBYAAAoq
HgIoFwAACip+AigYAAAKAgJzEAAABn0CAAAEAgJzEQAABn0DAAAEKpIEcp4AAHAabxkAAAosFQIF
AgMoGgAACg4EcwUAAAZvDgAABipKKwcCA28PAAAGA28KAAAGLfEqBio6AigbAAAKAgN9BAAABCo6
AigbAAAKAgN9BQAABCqWAnsFAAAEbxwAAApyrgAAcG8dAAAKKB4AAApvHwAACqUaAAABKoYCewUA
AARvHAAACnKuAABwbx0AAAoDjBoAAAFvIAAACioeAigbAAAKKq5+BgAABC0ecsAAAHDQBwAAAigh
AAAKbyIAAApzIwAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCQAAAoqLnMZ
AAAGgAgAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOgFAAAjfgAAVAYA
AFAHAAAjU3RyaW5ncwAAAACkDQAANAEAACNVUwDYDgAAEAAAACNHVUlEAAAA6A4AALgBAAAjQmxv
YgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAgAAAAaAAAAEgAAACQAAAAQ
AAAABAAAAAgAAAAKAAAAAQAAAAUAAAABAAAAAAAzAwEAAAAAAAYAIwLyBAYAtwLyBAYAbwHfBA8A
ZgUAAAYAnAHpAwYABgLpAwYA5wHpAwYAngLpAwYAQwLpAwYAXALpAwYAswHpAwYAzgH8AgoAdwK8
AAoAiQS8AA4AegS8AAoAMgS8AAoASga8AAYA/AWhAwYAUgHfBAYAmgQSBQYAJgTUAxIAIgEdAxIA
gwEdAxIACgG/AwYANwHyBAYAOgChAwYA+wOhAwYAFgOhAwYAFQShAxYAEQCqBBYAAQCqBEcA8QYA
ABYAIgCqBAYA3QChAwYAjgChAwYARAfpAwAAAABAAAAAAAABAAEAAQAQALQDAAAQAAEAAQABABAA
bQQAADkAAgAFAAEAEAAsBgAARQACAAwAAQAQAPAFAABJAAQAEAABABAAsQUAAEkABQARAAAAEAAZ
BXUFSQAGABQAAAEQAOAFdQVhAAgAGAABAHQGggAGAPAFhQAGALEFiQABADoGjQABADoGjQARAKgD
kQARAPoAlQARAH4AmQBQIAAAAADGANUCBgABAF8gAAAAAMYA4AIGAAEAZyAAAAAAxgAhB50AAQCD
IAAAAACGGNIEBgACAIsgAAAAAIYY0gQbAAIAliAAAAAAhgh+BgEABQClIAAAAACGCHMDowAGALwg
AAAAAIYIGwYQAAcAxiAAAAAAhghbA6MACADdIAAAAACGADgHKwAJAOUgAAAAAIYAAwYrAAkA7SAA
AAAAhhjSBAYACQANIQAAAADGANAGqAAJADIhAAAAAMYByQadAA0ARSEAAAAAxgEhB50ADgBHIQAA
AACGGNIEsgAPAFYhAAAAAIYY0gSyABAAZSEAAAAAhghaBrgAEQCLIQAAAACGCGcGAQARAK0hAAAA
AIMY0gQGABIAtSEAAAAAkwiWBLwAEgDhIQAAAACTCOIAwQASAOghAAAAAJMI7gDGABIA8CEAAAAA
lggPBswAEwD3IQAAAACGGNIEBgATAP8hAAAAAJEY2ATRABMAAAABADwHAAABAI8EAAACALsFAAAD
AEAEAAABAPYCAAABAPYCAAABAPYCAAABAPYCAAABAEkAAAACALIAAAADAI8EAAAEAEAEAAABAI8E
AAABADwHAAABAFAGAAABAFAGAAABAPYCAAABAPYCCQDSBAEAEQDSBAYAGQDSBAoAKQDSBBAAMQDS
BBAAOQDSBBAAQQDSBBAASQDSBBAAUQDSBBAAWQDSBBAAYQDSBBAAaQDSBAYAmQDSBAYAuQDSBBUA
yQDSBAYAiQDVAgYAiQDgAgYAcQDSBBsAcQCYAyUAcQCHAwEA2QDSBBAAcQA4BysAcQADBisAiQDS
BAYA4QDpBS8AiQDPBTYAkQDSBAYAiQCkBTwA8QCPA0EAiQAMB0cA+QDdBk0A+QDsAlQAEQGgAFkA
EQFAB2IAoQDSBGgAwQDSBAYALgALAPAALgATAPkALgAbABgBLgAjACEBLgArAEoBLgAzAEoBLgA7
AEoBLgBDACEBLgBLAFABLgBTAEoBLgBbAGcBQwBjALEByQBzABgB4wBrALEB6QBzABgBAQF7ALEB
AwABAAYABQAHAAYACAAIAAAAggbVAAAAdwPZAAAAHwbdAAAAXwPZAAAAdQbVAAAAmgThAAAAAgHm
AAAAEwbrAAEABgADAAEABwAFAAEACAAHAAEACQAJAAIAEgALAAEAEwALAAIAFQANAAIAFgAPAAEA
FwAPAAIAGAARAASAAAABAAAAAAAAAAAAAAAAAFEAAAAEAAAAAAAAAAAAAABwAHUAAAAAAA4AAAAA
AAAAAAAAAHkAiwYAAAAADgAAAAAAAAAAAAAAeQCoBgAAAAAEAAAAAAAAAAAAAABwAKEDAAAAAA4A
AAAAAAAAAAAAAHkASgQAAAAAAAAAAAEAAAAjBQAAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1Zh
cmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABJbnQzMgA8TW9kdWxlPgBJbnB1dElE
AFNDX2FhMWI2MzFkYjQzYjQ0NDJiNDU1OGYwYjhhMTIzNWNiAG1zY29ybGliAGRlZmF1bHRJbnN0
YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBzZXRfVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFND
X2FhMWI2MzFkYjQzYjQ0NDJiNDU1OGYwYjhhMTIzNWNiLmRsbABzZXRfZXJyb3JDb21tZW50X0lz
TnVsbABzZXRfcm93Q291bnRfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJp
bmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19hYTFiNjMxZGI0M2I0NDQy
YjQ1NThmMGI4YTEyMzVjYi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAU0NfYWExYjYzMWRiNDNiNDQ0MmI0NTU4ZjBiOGExMjM1Y2IuUHJvcGVydGllcwBnZXRf
UmVhZFdyaXRlVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AHNldF9lcnJvckNvbW1lbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29t
cG9uZW50AGdldF9Sb3dDb3VudABzZXRfUm93Q291bnQAelJvd0NvdW50AHNldF9yb3dDb3VudABN
aWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVI
b3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25l
bnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93
AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFSAG8AdwBDAG8AdQBuAHQAAHFTAEMAXwBhAGEA
MQBiADYAMwAxAGQAYgA0ADMAYgA0ADQANAAyAGIANAA1ADUAOABmADAAYgA4AGEAMQAyADMANQBj
AGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAYld+7TrlAk+o
/8O3LBHDggAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkgAwESPR0IEkEFIAIBCBwDIAACBiAC
Ag4RdQUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAABEoCJEYCNBSAAEoCRByAC
AQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBggDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwE
IAEBAgkgBAEIDhI9EkEFIAEBEkUDIAAIBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAgDKAAC
AygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU0NfYWExYjYzMWRiNDNiNDQ0MmI0NTU4ZjBiOGExMjM1Y2IAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAIwzAAAAAAAAAAAAAKYzAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYMwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBhAGEAMQBiADYAMwAxAGQAYgA0ADMAYgA0ADQANAAyAGIANAA1ADUAOABmADAAYgA4
AGEAMQAyADMANQBjAGIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGEAYQAxAGIANgAz
ADEAZABiADQAMwBiADQANAA0ADIAYgA0ADUANQA4AGYAMABiADgAYQAxADIAMwA1AGMAYgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYQBh
ADEAYgA2ADMAMQBkAGIANAAzAGIANAA0ADQAMgBiADQANQA1ADgAZgAwAGIAOABhADEAMgAzADUA
YwBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGEAYQAx
AGIANgAzADEAZABiADQAMwBiADQANAA0ADIAYgA0ADUANQA4AGYAMABiADgAYQAxADIAMwA1AGMA
YgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAuDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_aa1b631db43b4442b4558f0b8a1235cb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::RowCount</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">A5</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\Script RowCount.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DFT - Move emp data 1\Script RowCount.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[rowCount]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[rowCount]"
                      name="rowCount" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[errorComment]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[errorComment]"
                      name="errorComment" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DFT - Move emp data 1\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[EmpName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EmpName"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[EmpName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[DOB]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DOB"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[DOB]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[rowCount]"
                      cachedDataType="i4"
                      cachedName="rowCount"
                      lineageId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[rowCount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2].Columns[drv_ErrorComment]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="drv_ErrorComment"
                      lineageId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Output].Columns[drv_ErrorComment]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[ID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[EmpName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedName="EmpName"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[EmpName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[EmpName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[DOB]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DOB"
                      lineageId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output].Columns[DOB]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[DOB]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[rowCount]"
                      cachedDataType="i4"
                      cachedName="rowCount"
                      lineageId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0].Columns[rowCount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1].Columns[drv_ErrorComment]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="drv_ErrorComment"
                      lineageId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Output].Columns[drv_ErrorComment]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[EmpName]"
                      codePage="1252"
                      dataType="str"
                      length="100"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[EmpName]"
                      name="EmpName" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[DOB]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[DOB]"
                      name="DOB" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      name="ErrorCode" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      name="ErrorColumn" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]"
                      dataType="i4"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[rowCount]"
                      name="rowCount" />
                    <outputColumn
                      refId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1].Columns[errorComment]"
                      name="errorComment" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DFT - Move emp data 1.Paths[Data Conversion Error Output]"
              endId="Package\DFT - Move emp data 1\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Error Output"
              startId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Error Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Data Conversion Output]"
              endId="Package\DFT - Move emp data 1\ODD - Load emp data.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Derived Column Output]"
              endId="Package\DFT - Move emp data 1\ODD - Log invalid records.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\DFT - Move emp data 1\DC - Add audit details.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Derived Column Output1]"
              endId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\DFT - Move emp data 1\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Derived Column Output2]"
              endId="Package\DFT - Move emp data 1\Union All.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\DFT - Move emp data 1\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[OLE DB Destination Error Output]"
              endId="Package\DFT - Move emp data 1\Derived Column 1.Inputs[Derived Column Input]"
              name="OLE DB Destination Error Output"
              startId="Package\DFT - Move emp data 1\ODD - Load emp data.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[OLE DB Source Output]"
              endId="Package\DFT - Move emp data 1\Script RowCount.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\DFT - Move emp data 1\ODS - Read emp source table.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Output 0]"
              endId="Package\DFT - Move emp data 1\DC - Add audit details.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\DFT - Move emp data 1\SC - Get error details.Outputs[Output 0]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Output 01]"
              endId="Package\DFT - Move emp data 1\DCV - Convert DOB to date.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\DFT - Move emp data 1\Script RowCount.Outputs[Output 0]" />
            <path
              refId="Package\DFT - Move emp data 1.Paths[Union All Output 1]"
              endId="Package\DFT - Move emp data 1\SC - Get error details.Inputs[Input 0]"
              name="Union All Output 1"
              startId="Package\DFT - Move emp data 1\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{CA7E3C61-F5BF-4DE0-9F12-F67847D31641}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1e610d28c6b24807b1605aa11c7784c3"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RowCount">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1e610d28c6b24807b1605aa11c7784c3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1e610d28c6b24807b1605aa11c7784c3")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1e610d28c6b24807b1605aa11c7784c3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            string countrows;
            countrows = Dts.Variables["User::RowCount"].Value.ToString();

            MessageBox.Show(countrows);

			Dts.TaskResult = (int)ScriptResults.Success;

            //System.Windows.Forms.MessageBox.Show("Total de registros:" + Dts.Variables[0].Value.ToString());
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_1e610d28c6b24807b1605aa11c7784c3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{83f43301-d0e3-48ce-89f1-d42d930e571d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1e610d28c6b24807b1605aa11c7784c3</RootNamespace>
    <AssemblyName>ST_1e610d28c6b24807b1605aa11c7784c3</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_1e610d28c6b24807b1605aa11c7784c3</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_1e610d28c6b24807b1605aa11c7784c3</msb:DisplayName>
    <msb:ProjectId>{E48CDC53-DCB4-40D9-91B5-B6408E91FA84}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1e610d28c6b24807b1605aa11c7784c3.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Settings.get_Default():ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Sett" +
    "ings")]

namespace ST_1e610d28c6b24807b1605aa11c7784c3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1e610d28c6b24807b1605aa11c7784c3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1e610d28c6b24807b1605aa11c7784c3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1e610d28c6b24807b1605aa11c7784c3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALGDq1wAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA1i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
LQAAAAAAAEgAAAACAAUA7CAAAOALAAABAAAAAAAAAMwsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnIfAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAlAAAACNVUwBsCgAAEAAAACNHVUlEAAAAfAoAAGQBAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0AkUEBgBx
ATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMDBgDQAeIC
CgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAM
AckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsAFgB1BQ4FFgBUBQ4FBgC7AKYDBgB3AKYDBgCEBfMD
AAAAACUAAAAAAAEAAQABABAAvgMBADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEA4ABsABEAXgBwAAYGTQB0AFaAIwV3AFaAwAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwjI
AIAAAQDGIAAAAACTCNQAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEA0gIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAiQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwD9AC4AQwDUAC4ASwADAS4AUwD9AC4AWwAaAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADoAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AAB9G0BlAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEwAVQAAAAAADgAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAAA4AAAAAAAAAAAAAAFUALgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfMWU2MTBkMjhjNmIyNDgwN2IxNjA1YWExMWM3Nzg0YzMA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8xZTYx
MGQyOGM2YjI0ODA3YjE2MDVhYTExYzc3ODRjMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzFlNjEwZDI4YzZiMjQ4MDdiMTYwNWFhMTFjNzc4NGMz
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8xZTYxMGQy
OGM2YjI0ODA3YjE2MDVhYTExYzc3ODRjMy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAAdVQBzAGUAcgA6ADoAUgBvAHcAQwBvAHUAbgB0AABxUwBUAF8A
MQBlADYAMQAwAGQAMgA4AGMANgBiADIANAA4ADAANwBiADEANgAwADUAYQBhADEAMQBjADcANwA4
ADQAYwAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAB0evxv
IIvsRIYKwYfN5ozVAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMg
ABwDIAAOBQABEXEOBgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0E
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfMWU2MTBkMjhjNmIyNDgwN2IxNjA1YWExMWM3Nzg0YzMAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAArC0AAAAAAAAAAAAAxi0AAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAALgtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAQGV9GwAAAQBAZX0bPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAxAGUANgAxADAAZAAyADgAYwA2AGIAMgA0ADgAMAA3AGIAMQA2ADAANQBhAGEA
MQAxAGMANwA3ADgANABjADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANwAwADMANwAuADIANQA5ADIAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAxAGUANgAxADAAZAAyADgAYwA2AGIAMgA0ADgAMAA3AGIAMQA2ADAANQBhAGEAMQAx
AGMANwA3ADgANABjADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADEAZQA2ADEAMABkADIAOABjADYAYgAyADQAOAAwADcAYgAxADYAMAA1
AGEAYQAxADEAYwA3ADcAOAA0AGMAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAxAGUANgAxADAAZAAyADgAYwA2AGIAMgA0ADgAMAA3AGIAMQA2ADAANQBh
AGEAMQAxAGMANwA3ADgANABjADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAMAAzADcALgAyADUAOQAyADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMAAzADcALgAyADUAOQAyADAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA2D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="227,42"
          Id="Package\DFT - Move emp data (original)"
          TopLeft="573.142864246758,70.9647068776062" />
        <NodeLayout
          Size="190,42"
          Id="Package\DFT - Move emp data 1"
          TopLeft="86,37" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="176,160" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DFT - Move emp data (original)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="181,42"
          Id="Package\DFT - Move emp data (original)\DC - Add audit details"
          TopLeft="508.571437232349,208.611767631584" />
        <NodeLayout
          Size="199,42"
          Id="Package\DFT - Move emp data (original)\ODD - Log invalid records"
          TopLeft="504.000008583069,276.517650936879" />
        <NodeLayout
          Size="178,42"
          Id="Package\DFT - Move emp data (original)\SC - Get error details"
          TopLeft="506.857151488868,133.364707752743" />
        <NodeLayout
          Size="206,42"
          Id="Package\DFT - Move emp data (original)\DCV - Convert DOB to date"
          TopLeft="208.000003542219,132.141178323818" />
        <NodeLayout
          Size="182,42"
          Id="Package\DFT - Move emp data (original)\ODD - Load emp data"
          TopLeft="212.571432191498,212.282355918356" />
        <NodeLayout
          Size="218,42"
          Id="Package\DFT - Move emp data (original)\ODS - Read emp source table"
          TopLeft="200.00000340598,45.8823535846592" />
        <EdgeLayout
          Id="Package\DFT - Move emp data (original).Paths[Output 0]"
          TopLeft="597.464294360609,175.364707752743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,33.247059878841"
              Start="0,0"
              End="0,25.747059878841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.747059878841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data (original).Paths[OLE DB Source Output]"
          TopLeft="308.80000340598,87.4823535846592">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-30.6666665304274,44.6588247391593"
              Start="0,0"
              End="-30.6666665304274,37.1588247391593">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5891771908533" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5891771908533"
                    Point2="0,26.5891771908533"
                    Point3="-4,26.5891771908533" />
                  <mssgle:LineSegment
                    End="-26.6666665304274,26.5891771908533" />
                  <mssgle:CubicBezierSegment
                    Point1="-26.6666665304274,26.5891771908533"
                    Point2="-30.6666665304274,26.5891771908533"
                    Point3="-30.6666665304274,30.5891771908533" />
                  <mssgle:LineSegment
                    End="-30.6666665304274,37.1588247391593" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data (original).Paths[Derived Column Output]"
          TopLeft="601.285722907709,250.211767631584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.3058833052956"
              Start="0,0"
              End="0,18.8058833052956">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8058833052956" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data (original).Paths[Data Conversion Output]"
          TopLeft="307.285717866859,173.741178323818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,38.5411775945379"
              Start="0,0"
              End="0,31.0411775945379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0411775945379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data (original).Paths[Data Conversion Error Output]"
          TopLeft="414.000003542219,153.75294303828">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="92.857147946649,0"
              Start="0,0"
              End="85.357147946649,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="85.357147946649,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.4078127454255,5,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Move emp data (original)\ODD - Load emp data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Move emp data (original)\ODS - Read emp source table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DFT - Move emp data 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="182,42"
          Id="Package\DFT - Move emp data 1\ODD - Load emp data"
          TopLeft="170.571432191498,257.282355918356" />
        <NodeLayout
          Size="157,42"
          Id="Package\DFT - Move emp data 1\Script RowCount"
          TopLeft="300,18" />
        <NodeLayout
          Size="178,42"
          Id="Package\DFT - Move emp data 1\SC - Get error details"
          TopLeft="748.857151488868,123.364707752743" />
        <NodeLayout
          Size="121,42"
          Id="Package\DFT - Move emp data 1\Union All"
          TopLeft="683,37" />
        <NodeLayout
          Size="218,42"
          Id="Package\DFT - Move emp data 1\ODS - Read emp source table"
          TopLeft="46.00000340598,21.8823535846592" />
        <NodeLayout
          Size="206,42"
          Id="Package\DFT - Move emp data 1\DCV - Convert DOB to date"
          TopLeft="86.000003542219,123.141178323818" />
        <NodeLayout
          Size="200,42"
          Id="Package\DFT - Move emp data 1\ODD - Log invalid records"
          TopLeft="504.000008583069,276.517650936879" />
        <NodeLayout
          Size="181,42"
          Id="Package\DFT - Move emp data 1\DC - Add audit details"
          TopLeft="655.571437232349,213.611767631584" />
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[OLE DB Source Output]"
          TopLeft="264.00000340598,40.9411767923296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.99999659402,0"
              Start="0,0"
              End="28.49999659402,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.49999659402,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Derived Column Output]"
          TopLeft="655.571437232349,234.611767631584">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-51.5714286492799,41.905883305295"
              Start="0,0"
              End="-51.5714286492799,34.405883305295">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-47.5714286492799,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-47.5714286492799,0"
                    Point2="-51.5714286492799,0"
                    Point3="-51.5714286492799,4" />
                  <mssgle:LineSegment
                    End="-51.5714286492799,34.405883305295" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Data Conversion Output]"
          TopLeft="189.000003542219,165.141178323818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="43.571428649279,92.141177594538"
              Start="0,0"
              End="43.571428649279,84.641177594538">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.8029226215879" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.8029226215879"
                    Point2="0,54.8029226215879"
                    Point3="4,54.8029226215879" />
                  <mssgle:LineSegment
                    End="39.571428649279,54.8029226215879" />
                  <mssgle:CubicBezierSegment
                    Point1="39.571428649279,54.8029226215879"
                    Point2="43.571428649279,54.8029226215879"
                    Point3="43.571428649279,58.8029226215879" />
                  <mssgle:LineSegment
                    End="43.571428649279,84.641177594538" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Union All Output 1]"
          TopLeft="762.333333333333,79">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="75.5238181555346,44.364707752743"
              Start="0,0"
              End="75.5238181555346,36.864707752743">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.0932739611513" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.0932739611513"
                    Point2="0,18.0932739611513"
                    Point3="4,18.0932739611513" />
                  <mssgle:LineSegment
                    End="71.5238181555346,18.0932739611513" />
                  <mssgle:CubicBezierSegment
                    Point1="71.5238181555346,18.0932739611513"
                    Point2="75.5238181555346,18.0932739611513"
                    Point3="75.5238181555346,22.0932739611513" />
                  <mssgle:LineSegment
                    End="75.5238181555346,36.864707752743" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Output 01]"
          TopLeft="378.5,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-222.499996457781,63.141178323818"
              Start="0,0"
              End="-222.499996457781,55.641178323818">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5927246667818" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5927246667818"
                    Point2="0,28.5927246667818"
                    Point3="-4,28.5927246667818" />
                  <mssgle:LineSegment
                    End="-218.499996457781,28.5927246667818" />
                  <mssgle:CubicBezierSegment
                    Point1="-218.499996457781,28.5927246667818"
                    Point2="-222.499996457781,28.5927246667818"
                    Point3="-222.499996457781,32.5927246667818" />
                  <mssgle:LineSegment
                    End="-222.499996457781,55.641178323818" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Output 0]"
          TopLeft="837.857151488868,165.364707752743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-91.785714256519,48.247059878841"
              Start="0,0"
              End="-91.785714256519,40.747059878841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1235299394205" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1235299394205"
                    Point2="0,24.1235299394205"
                    Point3="-4,24.1235299394205" />
                  <mssgle:LineSegment
                    End="-87.785714256519,24.1235299394205" />
                  <mssgle:CubicBezierSegment
                    Point1="-87.785714256519,24.1235299394205"
                    Point2="-91.785714256519,24.1235299394205"
                    Point3="-91.785714256519,28.1235299394205" />
                  <mssgle:LineSegment
                    End="-91.785714256519,40.747059878841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\DFT - Move emp data 1\Derived Column"
          TopLeft="500,50" />
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Data Conversion Error Output]"
          TopLeft="222.000003542219,123.141178323818">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="285.999996457781,-31.141178323818"
              Start="0,0"
              End="285.999996457781,-23.641178323818">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-8.60047677842347" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-8.60047677842347"
                    Point2="0,-12.6004767784235"
                    Point3="4,-12.6004767784235" />
                  <mssgle:LineSegment
                    End="281.999996457781,-12.6004767784235" />
                  <mssgle:CubicBezierSegment
                    Point1="281.999996457781,-12.6004767784235"
                    Point2="285.999996457781,-12.6004767784235"
                    Point3="285.999996457781,-16.6004767784235" />
                  <mssgle:LineSegment
                    End="285.999996457781,-23.641178323818" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="76.9136115101405,-7.60047677842347,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Derived Column Output1]"
          TopLeft="654,71">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="29,-13"
              Start="0,0"
              End="21.5,-13">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="10.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="10.5,0"
                    Point2="14.5,0"
                    Point3="14.5,-4" />
                  <mssgle:LineSegment
                    End="14.5,-9" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,-9"
                    Point2="14.5,-13"
                    Point3="18.5,-13" />
                  <mssgle:LineSegment
                    End="21.5,-13" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\DFT - Move emp data 1\Derived Column 1"
          TopLeft="448,153" />
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[OLE DB Destination Error Output]"
          TopLeft="290.571432191498,257.282355918356">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="234.428567808502,-62.282355918356"
              Start="0,0"
              End="234.428567808502,-54.782355918356">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-21.2386017446933" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-21.2386017446933"
                    Point2="0,-25.2386017446933"
                    Point3="4,-25.2386017446933" />
                  <mssgle:LineSegment
                    End="230.428567808502,-25.2386017446933" />
                  <mssgle:CubicBezierSegment
                    Point1="230.428567808502,-25.2386017446933"
                    Point2="234.428567808502,-25.2386017446933"
                    Point3="234.428567808502,-29.2386017446933" />
                  <mssgle:LineSegment
                    End="234.428567808502,-54.782355918356" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.005377654251,-20.2386017446933,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DFT - Move emp data 1.Paths[Derived Column Output2]"
          TopLeft="525,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="199.666666666667,-74"
              Start="0,0"
              End="199.666666666667,-66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-39.8205546492659" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-39.8205546492659"
                    Point2="0,-43.8205546492659"
                    Point3="4,-43.8205546492659" />
                  <mssgle:LineSegment
                    End="195.666666666667,-43.8205546492659" />
                  <mssgle:CubicBezierSegment
                    Point1="195.666666666667,-43.8205546492659"
                    Point2="199.666666666667,-43.8205546492659"
                    Point3="199.666666666667,-47.8205546492659" />
                  <mssgle:LineSegment
                    End="199.666666666667,-66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Move emp data 1\ODS - Read emp source table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Move emp data 1\ODD - Log invalid records">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DFT - Move emp data 1\ODD - Load emp data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>